import java.util.*;
public class LevelOrderTraversal{
static class Node{
int data;
Node left;
Node right;
Node(int data){
this.data = data;
}}
public static List<List<Integer>> levelOrder(Node root) {
Queue<Node> q = new LinkedList<>();
List<List<Integer>> res = new ArrayList<List<Integer>>();
if(root == null) return res;
q.add(root);
while(!q.isEmpty()){
int n = q.size();
List<Integer> l = new ArrayList<>();
for(int i=0;i<n;i++){
if(q.peek().left!=null) q.add(q.peek().left);
if(q.peek().right!=null) q.add(q.peek().right);
l.add(q.peek().data);
q.remove();
}
res.add(l);
}
return res;
}
public static void main(String[] args){
Node root = new Node(10);
root.left = new Node(20);
root.right = new Node(30);
root.left.left = new Node(40);
root.left.right = new Node(50);
root.right.left = new Node(60);
root.right.right = new Node(70);
System.out.println(levelOrder(root));
}
}
